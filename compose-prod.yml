services:
  mepa-web:
    container_name: mepa-web
    image: mepa-web:${TAG:-latest-prod}
    build:
      context: ./
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
        NODE_ENV: ${NODE_ENV:-production}
    expose:
      - ${PORT}
    env_file:
      - ./.envs/.env.prod
    environment:
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
    volumes:
      - nextjs_static:/app/.next/static
      - nextjs_public:/app/public
    networks:
      - proxy-network
    restart: always
  
  ngnix-web:
      container_name: nginx-web
      image: nginx:1.27.0-alpine
      restart: unless-stopped
      build:
        context: nginx
        dockerfile: Dockerfile
      expose:
        - 80
      volumes:
        - nextjs_static:/app/nextjs_static:ro
        - nextjs_public:/app/nextjs_public:ro
      labels:
        traefik.enable: "true"
        traefik.http.routers.ngnix-web.rule: "Host(`${HOSTNAME}`)"
        traefik.http.services.ngnix-web.loadbalancer.server.port: 80
        traefik.http.routers.ngnix-web.entrypoints: "websecure"
        traefik.http.routers.ngnix-web.tls.certresolver: "leprod"
      networks:
        - proxy-network
      depends_on:
        - mepa-web

networks:
  proxy-network:
    external: true

volumes:
  nextjs_static:
    name: nextjs_static
  nextjs_public:
    name: nextjs_public

