stages:
  - lint
  - test
  - build

workflow:
  name: "Pipeline from $CI_PIPELINE_SOURCE (branch: $CI_COMMIT_REF_NAME)"
  rules:
    # Pipeline is triggered on merge request.
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

    # Pipeline is triggered for every commit on every branch.
    - if: $CI_PIPELINE_SOURCE == 'push'

# Reference: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
variables:
  # Temporary until tags are implemented.
  VERSION: "1.0.$CI_PIPELINE_IID"

# Written like this to facilitate reuse later.
.kaniko-build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  before_script:
    - echo "Starting to build $CI_REGISTRY_IMAGE:$VERSION"
    - echo "Verifying if the variables are defined"
    - if [ -z $CONTEXT ]; then echo "Empty CONTEXT. Exiting!"; exit 1; fi
    - if [ -z $DOCKERFILE_PATH ]; then echo "Empty DOCKERFILE_PATH. Exiting!"; exit 1; fi
  script:
    - >-
      /kaniko/executor
      --context $CONTEXT
      --dockerfile $DOCKERFILE_PATH
      --single-snapshot
      --snapshot-mode=redo
      --cache=true
      --destination $CI_REGISTRY_IMAGE:$VERSION
      $EXTRA_ARGS
  artifacts:
    expire_in: 5 mins

.kaniko-build-no-push:
  extends: .kaniko-build
  script:
    - >-
      /kaniko/executor
      --context $CONTEXT
      --dockerfile $DOCKERFILE_PATH
      --single-snapshot
      --snapshot-mode=redo
      --no-push

lint:
  stage: lint
  image: node:18-alpine
  script:
    - yarn install
    - yarn run lint

unit-test:
  stage: test
  image: node:18-alpine
  script:
    - yarn install
    - yarn run test

test-build:
  stage: test
  extends: .kaniko-build-no-push
  variables:
    CONTEXT: $CI_PROJECT_DIR
    DOCKERFILE_PATH: Dockerfile.prod

build:
  extends: .kaniko-build
  variables:
    CONTEXT: $CI_PROJECT_DIR
    EXTRA_ARGS: "--destination $CI_REGISTRY_IMAGE:latest"
    DOCKERFILE_PATH: Dockerfile.prod
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == 'push'
