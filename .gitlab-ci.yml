image: node:18.20.4-alpine

stages:
  - build
  - lint
  - test
  - deploy

workflow:
  name: 'Pipeline from $CI_PIPELINE_SOURCE (branch: $CI_COMMIT_REF_NAME)'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

    - if: $CI_PIPELINE_SOURCE == 'push'

variables:
  VERSION: '1.0.$CI_PIPELINE_IID'

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

install_dependencies:
  stage: build
  script:
    - echo "Install dependencies"
    - npm ci

build:
  stage: build
  script:
    - echo "Building NextJS App"
    - npm run build
  artifacts:
    paths:
      - .next/
    expire_in: 1 hour

lint:
  stage: lint
  script:
    - echo "Running linter"
    - npm run lint

unit_test:
  stage: test
  script:
    - echo "Running unit tests"
    - npm test
  artifacts:
    when: always
    paths:
      - coverage/
    reports:
      junit: coverage/junit.xml

docker_build:
  stage: deploy
  image: docker:27.1.1
  services:
    - docker:27.1.1-dind
  before_script:
    - echo "Logging in to GitLab Container Registry!"
    # Login to GitLab Container Registry ou Dockerhub (config $CI_REGISTRY_USER" e $CI_REGISTRY)
  script:
    - echo "Building Docker image"
    - docker build --build-arg NODE_ENV=production -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    # Push da imagem para o gitlab registry ou dockerhub (configurar CI/CD -> Variables)
    - docker image ls
  rules:
    - changes:
        - Dockerfile
